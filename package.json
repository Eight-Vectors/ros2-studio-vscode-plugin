{
  "name": "ros2-studio",
  "displayName": "ROS 2 Studio",
  "description": "Connect to ROS 2 systems via rosbridge, visualize topics, call services, and interact with ROS 2 nodes directly from VS Code",
  "version": "0.3.3",
  "publisher": "eightvectors",
  "icon": "media/ros2-studio-logo.png",
  "galleryBanner": {
    "color": "#1e2327",
    "theme": "dark"
  },
  "homepage": "https://github.com/Eight-Vectors/ros2-studio#readme",
  "bugs": {
    "url": "https://github.com/Eight-Vectors/ros2-studio/issues"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Eight-Vectors/ros2-studio.git"
  },
  "keywords": [
    "ros",
    "ros2",
    "rosbridge",
    "robotics",
    "robot",
    "websocket",
    "visualization",
    "topics",
    "services",
    "nodes",
    "parameters",
    "debugging",
    "simulation",
    "telemetry",
    "sensor",
    "laser",
    "urdf",
    "occupancy-grid",
    "bag",
    "rosbag",
    "ros-bag",
    "publisher",
    "subscriber",
    "rosapi",
    "development",
    "middleware",
    "real-time",
    "point-cloud",
    "3d-visualization",
    "remote-control"
  ],
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Visualization",
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ros2-studio.connect-bridge",
        "title": "Connect to Remote"
      },
      {
        "command": "ros2-studio.force-reset",
        "title": "Force Reset Connection",
        "icon": "$(debug-restart)"
      },
      {
        "command": "ros2-studio.stop-retry",
        "title": "Force Stop Connection",
        "icon": "$(stop)"
      },
      {
        "command": "ros2-studio.disconnect-bridge",
        "title": "Disconnect",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "ros2-studio.refresh-connections",
        "title": "Refresh connection",
        "icon": "$(refresh)"
      },
      {
        "command": "ros2-studio.toggle-subscription",
        "title": "Subscribe"
      },
      {
        "command": "ros2-studio.subscribe-to-topic",
        "title": "Subscribe"
      },
      {
        "command": "ros2-studio.unsubscribe-from-topic",
        "title": "Unsubscribe"
      },
      {
        "command": "ros2-studio.get-parameters",
        "title": "Get Parameters",
        "icon": "$(settings-gear)"
      },
      {
        "command": "ros2-studio.reset-visualization-preference",
        "title": "Reset Visualization View Mode Preference"
      },
      {
        "command": "ros2-studio.add-to-bag-recorder",
        "title": "Add to Bag Recorder",
        "icon": "$(record)"
      },
      {
        "command": "ros2-studio.open-bag-recorder",
        "title": "Open ROS2 Bag Recorder",
        "icon": "$(record)"
      },
      {
        "command": "ros2-studio.open-message-inspector",
        "title": "Open Message/Service Inspector",
        "icon": "$(symbol-interface)"
      },
      {
        "command": "ros2-studio.inspect-topic-message",
        "title": "Inspect Message Type",
        "icon": "$(info)"
      },
      {
        "command": "ros2-studio.inspect-topic-from-tree",
        "title": "Inspect",
        "icon": "$(info)"
      },
      {
        "command": "ros2-studio.inspect-service-type",
        "title": "Inspect Service Type",
        "icon": "$(info)"
      },
      {
        "command": "ros2-studio.inspect-action-type",
        "title": "Inspect Action Type",
        "icon": "$(info)"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Extension Configuration",
      "properties": {
        "ros2-studio.rosbridgeUrl": {
          "type": "string",
          "default": "ws://localhost:9090",
          "description": "Rosbridge WebSocket URL"
        },
        "ros2-studio.remoteBagPath": {
          "type": "string",
          "default": "/home/ros/bags",
          "description": "Default directory path on the remote ROS 2 machine for saving bag files"
        },
        "ros2-studio.messageThrottleRate": {
          "type": "number",
          "default": 100,
          "minimum": 0,
          "maximum": 1000,
          "description": "Minimum milliseconds between message updates (0 to disable throttling)"
        },
        "ros2-studio.maxMessageBufferSize": {
          "type": "number",
          "default": 100,
          "minimum": 10,
          "maximum": 1000,
          "description": "Maximum number of messages to keep in buffer per topic"
        },
        "ros2-studio.maxMessageDisplayLength": {
          "type": "number",
          "default": 2000,
          "minimum": 500,
          "maximum": 10000,
          "description": "Maximum characters to display for unknown message types"
        },
        "ros2-studio.showFullDataForKnownTypes": {
          "type": "boolean",
          "default": true,
          "description": "Show full data arrays for known types like LaserScan ranges (may impact performance)"
        },
        "ros2-studio.maxOutputLines": {
          "type": "number",
          "default": 500,
          "minimum": 100,
          "maximum": 2000,
          "description": "Maximum lines to keep in output channel before clearing (prevents memory issues)"
        },
        "ros2-studio.maxMessagesToRetain": {
          "type": "number",
          "default": 10,
          "minimum": 1,
          "maximum": 100,
          "description": "Maximum number of messages to retain per topic (prevents memory issues for infrequent topics)"
        },
        "ros2-studio.maxMemoryMB": {
          "type": "number",
          "default": 1,
          "minimum": 0.1,
          "maximum": 10,
          "description": "Maximum memory (in MB) allowed for message buffer per topic before trimming old messages"
        },
        "ros2-studio.maxReconnectAttempts": {
          "type": "number",
          "default": 10,
          "minimum": 0,
          "maximum": 100,
          "description": "Maximum number of reconnection attempts before giving up (0 = infinite)"
        },
        "ros2-studio.staticTopics": {
          "type": "array",
          "default": [
            "/robot_description",
            "/tf_static",
            "/map_metadata",
            "/map"
          ],
          "description": "List of topic names that are considered static (publish once or rarely)",
          "items": {
            "type": "string"
          }
        },
        "ros2-studio.staticTopicPatterns": {
          "type": "array",
          "default": [
            ".*_static$",
            ".*_description$",
            ".*_metadata$"
          ],
          "description": "Regular expression patterns to match static topic names",
          "items": {
            "type": "string"
          }
        },
        "ros2-studio.staticMessageTypes": {
          "type": "array",
          "default": [
            ".*Parameter.*",
            ".*Description.*"
          ],
          "description": "Regular expression patterns to match static message types",
          "items": {
            "type": "string"
          }
        },
        "ros2-studio.staticTopicAutoDetectRate": {
          "type": "number",
          "default": 0.1,
          "minimum": 0.01,
          "maximum": 10,
          "description": "Message rate threshold (messages per second) below which topics are auto-detected as static"
        }
      }
    },
    "keybindings": [],
    "viewsWelcome": [
      {
        "view": "ros2StudioWelcomeView",
        "contents": "Welcome to ROS 2 Studio!\n\n[Connect](command:ros2-studio.connect-bridge)",
        "when": "!ros2-studio.isConnecting && !ros2-studio.isReconnecting"
      },
      {
        "view": "ros2StudioWelcomeView",
        "contents": "Welcome to ROS 2 Studio!\n\nConnecting...\n\n[Force Stop](command:ros2-studio.stop-retry)",
        "when": "ros2-studio.isConnecting"
      },
      {
        "view": "ros2StudioWelcomeView",
        "contents": "Welcome to ROS 2 Studio!\n\nReconnecting...\n\n[Force Stop](command:ros2-studio.stop-retry)",
        "when": "ros2-studio.isReconnecting"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ros2StudioContainerView",
          "title": "ROS 2 Studio",
          "icon": "media/ros2-studio-logo.png"
        }
      ]
    },
    "views": {
      "ros2StudioContainerView": [
        {
          "id": "ros2StudioWelcomeView",
          "name": "ROS 2 Studio",
          "icon": "media/ros2-studio-logo.png",
          "when": "!ros2-studio.isConnected"
        },
        {
          "id": "ros2StudioTopicsView",
          "name": "ROS 2 Topics",
          "icon": "media/ros2-studio-logo.png",
          "when": "ros2-studio.isConnected"
        },
        {
          "id": "ros2StudioNodeListView",
          "name": "ROS 2 Nodes",
          "icon": "media/ros2-studio-logo.png",
          "when": "ros2-studio.isConnected"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "ros2-studio.disconnect-bridge",
          "when": "view == ros2StudioTopicsView && ros2-studio.isConnected",
          "group": "navigation@1"
        },
        {
          "command": "ros2-studio.force-reset",
          "when": "view == ros2StudioTopicsView && ros2-studio.isConnected",
          "group": "navigation@2"
        },
        {
          "command": "ros2-studio.stop-retry",
          "when": "view == ros2StudioTopicsView && (ros2-studio.isReconnecting || ros2-studio.isConnecting)",
          "group": "navigation@3"
        },
        {
          "command": "ros2-studio.refresh-connections",
          "when": "view == ros2StudioTopicsView && ros2-studio.isConnected",
          "group": "navigation@4"
        },
        {
          "command": "ros2-studio.open-bag-recorder",
          "when": "view == ros2StudioTopicsView && ros2-studio.isConnected",
          "group": "navigation@5"
        },
        {
          "command": "ros2-studio.open-message-inspector",
          "when": "view == ros2StudioTopicsView && ros2-studio.isConnected",
          "group": "navigation@6"
        },
        {
          "command": "ros2-studio.stop-retry",
          "when": "view == ros2StudioWelcomeView && (ros2-studio.isReconnecting || ros2-studio.isConnecting)",
          "group": "navigation@1"
        },
        {
          "command": "ros2-studio.disconnect-bridge",
          "when": "view == ros2StudioNodeListView && ros2-studio.isConnected",
          "group": "navigation@1"
        },
        {
          "command": "ros2-studio.force-reset",
          "when": "view == ros2StudioNodeListView && ros2-studio.isConnected",
          "group": "navigation@2"
        },
        {
          "command": "ros2-studio.stop-retry",
          "when": "view == ros2StudioNodeListView && (ros2-studio.isReconnecting || ros2-studio.isConnecting)",
          "group": "navigation@3"
        },
        {
          "command": "ros2-studio.refresh-connections",
          "when": "view == ros2StudioNodeListView && ros2-studio.isConnected",
          "group": "navigation@4"
        },
        {
          "command": "ros2-studio.open-bag-recorder",
          "when": "view == ros2StudioNodeListView && ros2-studio.isConnected",
          "group": "navigation@5"
        },
        {
          "command": "ros2-studio.open-message-inspector",
          "when": "view == ros2StudioNodeListView && ros2-studio.isConnected",
          "group": "navigation@6"
        }
      ],
      "view/item/context": [
        {
          "command": "ros2-studio.disconnect-bridge",
          "when": "view == ros2StudioTopicsView && viewItem == nodeTree"
        },
        {
          "command": "ros2-studio.add-to-bag-recorder",
          "when": "view == ros2StudioTopicsView && viewItem == topic"
        },
        {
          "command": "ros2-studio.subscribe-to-topic",
          "when": "view == ros2StudioTopicsView && viewItem == topic",
          "group": "inline@1"
        },
        {
          "command": "ros2-studio.unsubscribe-from-topic",
          "when": "view == ros2StudioTopicsView && viewItem == topicSubscribed",
          "group": "inline@1"
        },
        {
          "command": "ros2-studio.inspect-topic-from-tree",
          "when": "view == ros2StudioTopicsView && viewItem == topic",
          "group": "inline@10"
        },
        {
          "command": "ros2-studio.inspect-topic-from-tree",
          "when": "view == ros2StudioTopicsView && viewItem == topicSubscribed",
          "group": "inline@10"
        },
        {
          "command": "ros2-studio.inspect-topic-message",
          "when": "view == ros2StudioTopicsView && viewItem == topic"
        },
        {
          "command": "ros2-studio.inspect-service-type",
          "when": "view == ros2StudioTopicsView && viewItem == service",
          "group": "inline"
        },
        {
          "command": "ros2-studio.inspect-action-type",
          "when": "view == ros2StudioTopicsView && viewItem == actionClient",
          "group": "inline"
        },
        {
          "command": "ros2-studio.get-parameters",
          "when": "view == ros2StudioNodeListView && viewItem == node"
        },
        {
          "command": "ros2-studio.add-to-bag-recorder",
          "when": "view == ros2StudioNodeListView && viewItem == publisher"
        },
        {
          "command": "ros2-studio.add-to-bag-recorder",
          "when": "view == ros2StudioNodeListView && viewItem == subscribers"
        },
        {
          "command": "ros2-studio.inspect-topic-message",
          "when": "view == ros2StudioNodeListView && viewItem == publisher",
          "group": "inline"
        },
        {
          "command": "ros2-studio.inspect-topic-message",
          "when": "view == ros2StudioNodeListView && viewItem == subscribers",
          "group": "inline"
        },
        {
          "command": "ros2-studio.inspect-service-type",
          "when": "view == ros2StudioNodeListView && viewItem == service",
          "group": "inline"
        },
        {
          "command": "ros2-studio.inspect-action-type",
          "when": "view == ros2StudioNodeListView && viewItem == actionClient",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint .",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "copy-webpack-plugin": "^13.0.0",
    "eslint": "^9.9.1",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "roslib": "^1.4.1"
  }
}
